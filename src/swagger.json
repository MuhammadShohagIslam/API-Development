{
    "swagger": "2.0",
    "info": {
        "description": "Fake Blog API Application",
        "version": "1.0.0",
        "title": "Blog API Application",
        "license": {
            "name": "MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
        {
            "name": "Post",
            "description": "API for Posts in the Blog Application"
        },
        {
            "name": "Comment",
            "description": "API for Comment in the Blog Application"
        },
        {
            "name": "User",
            "description": "Operations about User"
        }
    ],
    "schemes": ["http"],
    "paths": {
        "/posts": {
            "post": {
                "tags": ["Post"],
                "summary": "Create new Post in system",
                "description": "Create new Post in system",
                "parameters": [
                    {
                        "name": "post",
                        "in": "body",
                        "description": "Post that we want to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Posts"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "New Post is created"
                    }
                }
            },
            "get": {
                "tags": ["Post"],
                "summary": "Get all Posts in system",
                "description": "Get all Posts in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/posts/{postId}": {
            "get": {
                "tags": ["Post"],
                "summary": "Find Post by postId",
                "description": "Find Post by postId",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "postId of the Post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Post Not Found by PostId"
                    }
                }
            },
            "patch": {
                "tags": ["Post"],
                "summary": "Updated Post by postId",
                "description": "This can only be done by the logged in user.",
                "operationId": "postId",
                "consumes": ["application/json"],
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "postId that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Post object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Posts"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post Updated Successfully"
                    }
                }
            },
            "delete": {
                "tags": ["Post"],
                "summary": "Delete Post by postId",
                "description": "This can only be done by the logged in user.",
                "operationId": "id",
                "consumes": ["application/json"],
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "postId that need to be Delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post Delete Successfully"
                    },
                    "404": {
                        "description": "Post Not Found by postId"
                    }
                }
            }
        },
        "/posts/users/{userId}": {
            "get": {
                "tags": ["Post"],
                "summary": "Find Post by userId",
                "description": "Find Post by userId",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "userId of the Post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Post Not Found by userId"
                    },
                    "400": {
                        "description": "Bad User Request by User"
                    }
                }
            }
        },
        "posts/{postId}/comments": {
            "get": {
                "tags": ["Post"],
                "summary": "Find Post Comments by postId",
                "description": "Find Post Comments by postId",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "postId of the Post",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Post Not Found by postId"
                    },
                    "400": {
                        "description": "Bad User Request by User"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": ["User"],
                "summary": "Create new user in system",
                "description": "Create new user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "New user is created"
                    }
                }
            },
            "get": {
                "tags": ["User"],
                "summary": "Get all users in system",
                "description": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": ["User"],
                "summary": "Find user by Id",
                "description": "Find user by Id",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User Not Found"
                    }
                }
            },
            "patch": {
                "tags": ["User"],
                "summary": "Updated user by Id",
                "description": "This can only be done by the logged in user.",
                "operationId": "id",
                "consumes": ["application/json"],
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User Update Successfully"
                    }
                }
            },
            "delete": {
                "tags": ["User"],
                "summary": "Delete user by Id",
                "description": "This can only be done by the logged in user.",
                "operationId": "id",
                "consumes": ["application/json"],
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id that need to be Delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Delete Successfully"
                    },
                    "404": {
                        "description": "User Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Users": {
            "type": "object",
            "required": ["username", "email"],
            "properties": {
                "username": {
                    "type": "string",
                    "min": 3,
                    "max": 30
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "Posts": {
            "type": "object",
            "required": ["title", "body", "userId"],
            "properties": {
                "title": {
                    "type": "string",
                    "max": 200,
                    "min": 10
                },
                "body": {
                    "type": "string",
                    "min": 200
                },
                "userId": {
                    "type": "string",
                    "$ref": "#/definitions/Users"
                }
            }
        },
        "Comments": {
            "type": "object",
            "required": ["name", "email", "postId", "body"],
            "properties": {
                "name": {
                    "type": "string",
                    "max": 40,
                    "min": 5
                },
                "email": {
                    "type": "string",
                    "trim": true,
                    "lowercase": true,
                    "unique": true,
                    "format": "email"
                },
                "body": {
                    "type": "string"
                },
                "postId": {
                    "$ref": "#/definitions/Posts"
                }
            }
        }
    }
}
